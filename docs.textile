---
layout: default
title: docs
section: docs
---
<div class="container">

  <div class="row">
    <div class="span3 bs-docs-sidebar">
      <ul class="nav nav-list bs-docs-sidenav">
        <!-- <li><a href="#about"><i class="icon-chevron-right"></i> About</a></li> -->
        <li><a href="#install"><i class="icon-chevron-right"></i> Installation instructions</a></li>
        <li><a href="#build"><i class="icon-chevron-right"></i> Building from source</a></li>
        <li><a href="#license"><i class="icon-chevron-right"></i> License</a></li>
      </ul>
    </div>
    <div class="span9">

      <section id="install">
        <div class="page-header">
          <h1>Installation instructions</h1>
        </div>

        <h2>Installing the RoboVM compiler dependencies</h2>

        <p>The RoboVM compiler needs the following tools to be installed on your system:</p>

        * Java JDK 6 or newer - "Oracle's JDK":http://www.oracle.com/technetwork/java/javase/downloads/index.html or "OpenJDK":http://openjdk.java.net should work
        * "LLVM 3.1":http://llvm.org/releases
        * An assembler - GCC (on Linux) and clang (on Mac OS X) are used as assembler frontends
        * A linker - GCC (on Linux) and clang (on Mac OS X) are used as linker frontends
        * Mac OS X only: To run iOS apps in the simulator or on a device you will need Xcode 4.5.2 installed

        <h4>Mac OS X</h4>

        <p>Download and install Java SE JDK 7 from "Oracle":http://www.oracle.com/technetwork/java/javase/downloads/index.html.</p>

        <p>Install "Xcode 4.5.2 from the Mac App Store":https://itunes.apple.com/us/app/xcode/id497799835?mt=12. It includes clang and and the iOS simulator. Once installed start Xcode and install the "Command Line Tools" component from the Downloads section under the Xcode -> Preferences... menu.</p>

        <p>Download and install the LLVM tools to /opt/llvm by running the following commands in a terminal:</p>
        
        <pre>
          curl http://llvm.org/releases/3.2/clang+llvm-3.2-x86_64-apple-darwin11.tar.gz > llvm.tar.gz
          sudo mkdir -p /opt
          sudo tar xvfz llvm.tar.gz -C /opt
          sudo rm -f /opt/llvm
          sudo ln -s /opt/clang+llvm-3.2-x86_64-apple-darwin11 /opt/llvm
        </pre>

        <h4>Ubuntu 12.04 (AMD64)</h4>

        <p>Most of the required tools are available in the standard Ubuntu repositories. In a terminal:</p>

        <pre>
          sudo apt-get install build-essential gcc-multilib openjdk-7-jdk
        </pre>

        <p>Download and install the LLVM tools to /opt/llvm:</p>

        <pre>
          curl http://llvm.org/releases/3.2/clang+llvm-3.2-x86_64-linux-ubuntu-12.04.tar.gz > llvm.tar.gz
          sudo tar xvfz llvm.tar.gz -C /opt
          sudo rm -f /opt/llvm
          sudo ln -s /opt/clang+llvm-3.2-x86_64-linux-ubuntu-12.04 /opt/llvm
        </pre>

        <h2>Installing RoboVM</h2>

        <p><a href="http://download.robovm.org/robovm-{{site.robovm.version}}.tar.gz">Download the latest RoboVM release</a> or use a package built by following the <a href="#build">build instructions</a> then run the following commands in a terminal to install it to /opt/robovm:</p>

        <pre>
          sudo tar robovm-{{site.robovm.version}}.tar.gz -C /opt
          sudo rm -f /opt/robovm
          sudo ln -s /opt/robovm-{{site.robovm.version}} /opt/robovm
        </pre>

        <p>If you had a previous RoboVM version installed it is recommended that you remove the cache of compiled classes:</p>

        <pre>
          rm -rf ~/.robovm/cache
        </pre>

      </section>

      <section id="build">
        <div class="page-header">
          <h1>Building from source</h1>
        </div>

        <h2>Build prerequisites</h2>

        In order to get the source code and build RoboVM you will need the following tools:

        * "Git":http://git-scm.com
        * "CMake 2.8.8 or newer":http://www.cmake.org
        * Java JDK 6 or newer - "Oracle's JDK":http://www.oracle.com/technetwork/java/javase/downloads/index.html or "OpenJDK":http://openjdk.java.net should work
        * "Maven 3":http://maven.apache.org
        * C/C++ compiler - GCC on Linux, clang on Mac OS X

        <h4>Mac OS X</h4>
        
        <p>Download and install Java SE JDK 7 from "Oracle":http://www.oracle.com/technetwork/java/javase/downloads/index.html.</p>

        <p>Install "Xcode 4.5.2 from the Mac App Store":https://itunes.apple.com/us/app/xcode/id497799835?mt=12. It includes clang. Once installed start Xcode and install the "Command Line Tools" component from the Downloads section under the Xcode -> Preferences... menu.</p>

        <p>Download and install CMake.</p>
        
        <p>Get Maven from the URL above and install it.</p>

        <h4>Ubuntu 12.04 (AMD64)</h4>

        <p>Most of the required tools are available in the standard Ubuntu repositories. In a terminal:</p>

        <pre>
          sudo apt-get install build-essential gcc-multilib git openjdk-7-jdk maven
        </pre>

        <p>The cmake version in Ubuntu 12.04 is too old so we use the version from Ubuntu 12.10:</p>

        <pre>
          wget http://us.archive.ubuntu.com/ubuntu/pool/main/c/cmake/cmake_2.8.9-0ubuntu1_amd64.deb
          wget http://us.archive.ubuntu.com/ubuntu/pool/main/c/cmake/cmake-data_2.8.9-0ubuntu1_all.deb
          sudo dpkg -i cmake*.deb
        </pre>

        <h2>Building RoboVM</h2>

        <p>Run the following commands in a terminal to build RoboVM:</p>

        <pre>
          git clone https://github.com/robovm/robovm.git
          cd robovm/vm
          ./build.sh --build=Debug
          cd ..
          mvn -DskipTests=true clean install
        </pre>

        <p>You should now have a tar.gz package in dist/target that you can install using the <a href="#install">instructions</a> above.</p>

      </section>

      <section id="license">
        <div class="page-header">
          <h1>License</h1>
        </div>
        
        <p>
          One of the goals of RoboVM has been to enable the development of commercial,
          closed-source applications. In the runtime, 3rd party libraries have been 
          chosen carefully to avoid restricting how original source code consumed by 
          and binaries produced by the compiler may be used and distributed.
        </p>

        <p>
          Each sub module in the GitHub repository contains a LICENSE.txt
          file and a NOTICE.txt file. The LICENSE.txt file contains the
          complete legal text for the license that module is released under.
          The NOTICE.txt file contains the copyright statement for the module
          and information on the licenses of any 3rd party dependencies used by
          the module.
        </p>

        <h2>Compile time tools</h2>

        <p>
          The compiler and the Eclipse plug-in are GPLv2 licensed. The compiler
          has a few 3rd party dependencies that have been released under different 
          open source licenses. For a complete list please see the 
          <a href="https://github.com/robovm/robovm/blob/master/compiler/NOTICE.txt">compiler/NOTICE.txt</a>
          file in the GitHub repostory.
        </p>

        <h2>Runtime libraries</h2>

        <p>
          Executables and apps produced by the compiler contain no GPLed code.
          The runtime class libraries and the runtime native libraries which are
          linked into the final binaries are all Apache License v2.0 licensed,
          licensed under BSD like licenses or placed in the public domain.
          For a complete list please see the 
          <a href="https://github.com/robovm/robovm/blob/master/vm/NOTICE.txt">vm/NOTICE.txt</a> and
          <a href="https://github.com/robovm/robovm/blob/master/rt/NOTICE.txt">rt/NOTICE.txt</a>
          files in the GitHub repostory.
        </p>

        <p>
          The Objective-C bridge and CocoaTouch bindings have no external dependencies
          and are released under the Apache License v2.0.
        </p>

      </section>

    </div>

</div>
